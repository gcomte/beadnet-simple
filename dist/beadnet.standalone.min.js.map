{"version":3,"file":"beadnet.standalone.min.js","sources":["../node_modules/datasets-unisex-first-names-en/dataset.js","../src/namegenerator.js","../node_modules/loglevel/lib/loglevel.js","../src/logger.js","../node_modules/extend/index.js","../src/options.js","../src/beadnet.js"],"sourcesContent":["module.exports = [\n\t\"Aarya\",\n\t\"Addison\",\n\t\"Adrian\",\n\t\"Aiden\",\n\t\"Ainsley\",\n\t\"Alby\",\n\t\"Alex\",\n\t\"Alexis\",\n\t\"Ali\",\n\t\"Amari\",\n\t\"Andy\",\n\t\"Angel\",\n\t\"Archer\",\n\t\"Ari\",\n\t\"Arya\",\n\t\"Ash\",\n\t\"Ashley\",\n\t\"Aspen\",\n\t\"Aubrey\",\n\t\"August\",\n\t\"Austen\",\n\t\"Avery\",\n\t\"Bailey\",\n\t\"Bay\",\n\t\"Billy\",\n\t\"Blaine\",\n\t\"Blair\",\n\t\"Blake\",\n\t\"Bobbie\",\n\t\"Brady\",\n\t\"Brett\",\n\t\"Brook\",\n\t\"Brooklyn\",\n\t\"Caelan\",\n\t\"Cameron\",\n\t\"Campbell\",\n\t\"Carmen\",\n\t\"Carroll\",\n\t\"Carson\",\n\t\"Casey\",\n\t\"Cassidy\",\n\t\"Celyn\",\n\t\"Charlie\",\n\t\"Chris\",\n\t\"Clay\",\n\t\"Cody\",\n\t\"Corey\",\n\t\"Dakota\",\n\t\"Dale\",\n\t\"Dallas\",\n\t\"Dana\",\n\t\"Dane\",\n\t\"Darrel\",\n\t\"Daryl\",\n\t\"Delta\",\n\t\"Devin\",\n\t\"Devon\",\n\t\"Dorian\",\n\t\"Drew\",\n\t\"Dylan\",\n\t\"Easton\",\n\t\"Eddie\",\n\t\"Eden\",\n\t\"Eli\",\n\t\"Ellery\",\n\t\"Elliott\",\n\t\"Emerson\",\n\t\"Emery\",\n\t\"Erin\",\n\t\"Fabian\",\n\t\"Finley\",\n\t\"Florian\",\n\t\"Flynn\",\n\t\"Frances\",\n\t\"Francis\",\n\t\"Frankie\",\n\t\"Gabriel\",\n\t\"Glenn\",\n\t\"Gray\",\n\t\"Hadley\",\n\t\"Harley\",\n\t\"Harper\",\n\t\"Hayden\",\n\t\"Hero\",\n\t\"Hudson\",\n\t\"Hunter\",\n\t\"Indiana\",\n\t\"Jade\",\n\t\"James\",\n\t\"Jamie\",\n\t\"Jayden\",\n\t\"Jean\",\n\t\"Jesse\",\n\t\"Jessie\",\n\t\"Jordan\",\n\t\"Jules\",\n\t\"Julian\",\n\t\"Justice\",\n\t\"Kaden\",\n\t\"Kadin\",\n\t\"Kai\",\n\t\"Karter\",\n\t\"Keegan\",\n\t\"Kelly\",\n\t\"Kelsey\",\n\t\"Kendall\",\n\t\"Kennedy\",\n\t\"Kerry\",\n\t\"Kyle\",\n\t\"Lake\",\n\t\"Landry\",\n\t\"Lane\",\n\t\"Lee\",\n\t\"Lincoln\",\n\t\"Linden\",\n\t\"Logan\",\n\t\"London\",\n\t\"Lonnie\",\n\t\"Lou\",\n\t\"Lucian\",\n\t\"Lumi\",\n\t\"Mackenzie\",\n\t\"Madison\",\n\t\"Marley\",\n\t\"Mason\",\n\t\"Max\",\n\t\"Maxwell\",\n\t\"Micah\",\n\t\"Monroe\",\n\t\"Montana\",\n\t\"Morgan\",\n\t\"Moriah\",\n\t\"Nevada\",\n\t\"Nico\",\n\t\"Noel\",\n\t\"Oakley\",\n\t\"Ode\",\n\t\"Ore\",\n\t\"Paris\",\n\t\"Parker\",\n\t\"Pat\",\n\t\"Payton\",\n\t\"Perry\",\n\t\"Peyton\",\n\t\"Phoenix\",\n\t\"Piper\",\n\t\"Quinn\",\n\t\"Raphael\",\n\t\"Ray\",\n\t\"Reagan\",\n\t\"Reed\",\n\t\"Reese\",\n\t\"Remy\",\n\t\"Riley\",\n\t\"River\",\n\t\"Roan\",\n\t\"Robin\",\n\t\"Rory\",\n\t\"Roux\",\n\t\"Rowan\",\n\t\"Rudy\",\n\t\"Ryan\",\n\t\"Sage\",\n\t\"Sam\",\n\t\"Samar\",\n\t\"Sawyer\",\n\t\"Scout\",\n\t\"Sean\",\n\t\"Shawn\",\n\t\"Sky\",\n\t\"Skylar\",\n\t\"Spencer\",\n\t\"Stevie\",\n\t\"Sunny\",\n\t\"Sydney\",\n\t\"Tanner\",\n\t\"Tatum\",\n\t\"Taylor\",\n\t\"Terry\",\n\t\"Toby\",\n\t\"Toni\",\n\t\"Tory\",\n\t\"Tru\",\n\t\"Tyler\",\n\t\"Umber\",\n\t\"Unique\",\n\t\"Val\",\n\t\"Vesper\",\n\t\"Wallace\",\n\t\"West\",\n\t\"Winter\",\n\t\"Wyatt\",\n\t\"Wynne\",\n\t\"Xen\",\n\t\"Xoan\",\n\t\"Yael\",\n\t\"Zion\"\n];","import names from \"datasets-unisex-first-names-en\";\n\nfunction getName() {\n\treturn names[Math.floor(Math.random() * names.length)];\n}\n\nexport default getName","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","import log from \"loglevel\";\n\nlog.enableAll();\nlog.setLevel(\"TRACE\");\n\nexport default log;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import extend from 'extend';\n\nconst defaultOptions = {\n\n\tcolorScheme: d3.scaleOrdinal(d3.schemeCategory20),\n\n\tdebug: false,\n\n\tcontainer: {\n\t\tselector: '#beadnet',\n\t\tbackgroundColor: '#FFF'\n\t},\n\n\tnodes: {\n\t\tradius: 35,\n\t\tcolor: null,\n\t\tstrokeWidth: 3,\n\t\tstrokeColor: null,\n\n\t\t/* [\"id\", \"balance\"] */\n\t\ttext: 'id'\n\t},\n\n\tchannels: {\n\t\tcolor: '#ccc',\n\t\tcolorHighlighted: null,\n\n\t\t/* Number or \"auto\" */\n\t\tstrokeWidth: 'auto',\n\t\tstrokeColor: null,\n\n\t\t/* show channel balance as text path */\n\t\tshowBalance: false\n\t},\n\n\tbeads: {\n\t\tradius: 10,\n\t\tspacing: -0.5,\n\t\tstrokeWidth: 2,\n\t\tstrokeColor: null,\n\n\t\tshowIndex: true\n\t},\n\n\tpresentation: false,\n};\n\n/**\n * Merge default option with user given options\n * To make a parameter required set it to \"undefined\" in the defaults.\n */\nfunction extendDefaultOptions(options) {\n\tlet opt = {};\n\textend(true, opt, defaultOptions, options);\n\n\topt.nodes.color = opt.nodes.color || opt.colorScheme(0);\n\topt.nodes.strokeColor = opt.nodes.strokeColor || opt.container.backgroundColor;\n\n\topt.channels.color = opt.channels.color || opt.colorScheme(15);\n\topt.channels.colorHighlighted = opt.channels.colorHighlighted || opt.colorScheme(19);\n\n\topt.beads.color = opt.beads.color || opt.colorScheme(10);\n\topt.beads.strokeColor = opt.beads.strokeColor || opt.container.backgroundColor;\n\topt.beads.animation = opt.beads.animation || d3.easeExp;\n\n\topt.beads.distance = opt.beads.radius * 2 +\n\t\topt.beads.spacing +\n\t\topt.beads.strokeWidth;\n\topt.beads.firstPosition =\n\t\topt.nodes.radius + opt.nodes.strokeWidth / 2 +\n\t\topt.beads.radius + opt.beads.strokeWidth / 2 +\n\t\topt.beads.spacing;\n\topt.beads.showIndex = opt.beads.showIndex === null ? opt.debug : opt.beads.showIndex;\n\n\treturn opt;\n}\n\nexport default extendDefaultOptions;\n","import getName from './namegenerator.js';\nimport log from './logger.js';\nimport extendDefaultOptions from './options.js';\n\nconst getRandomNumber = function (max) {\n\treturn Math.floor(Math.random() * max);\n};\n\nconst COMMAND_MAPPING = {\n\tADD_NODE: {\n\t\tfnName: 'addNode',\n\t\tnumArgs: 1\n\t},\n\tADD_NODES: {\n\t\tfnName: 'addNodes',\n\t\tnumArgs: 1\n\t},\n\tREMOVE_NODE: {\n\t\tfnName: 'removeNode',\n\t\tnumArgs: 1\n\t},\n\tADD_CHANNEL: {\n\t\tfnName: 'addChannel',\n\t\tnumArgs: 1\n\t},\n\tADD_CHANNELS: {\n\t\tfnName: 'addChannels',\n\t\tnumArgs: 1\n\t},\n\tREMOVE_CHANNEL: {\n\t\tfnName: 'removeChannel',\n\t\tnumArgs: 2\n\t},\n\tCHANGE_CHANNEL_SOURCE_BALANCE: {\n\t\tfnName: 'changeChannelSourceBalance',\n\t\tnumArgs: 3\n\t},\n\tCHANGE_CHANNEL_TARGET_BALANCE: {\n\t\tfnName: 'changeChannelTargetBalance',\n\t\tnumArgs: 3\n\t},\n\tHIGHLIGHT_CHANNEL: {\n\t\tfnName: 'highlightChannel',\n\t\tnumArgs: 3\n\t},\n\tMOVE_BEADS: {\n\t\tfnName: 'moveBeads',\n\t\tnumArgs: 4\n\t},\n\tUPDATE_NODE: {\n\t\tfnName: 'updateNode',\n\t\tnumArgs: 2\n\t}\n};\n\n/**\n * Beadnet draws nodes, channels between nodes and channel balances using d3js.\n * Channel balances are drawn as beads on a string and can be moved to visualize\n * funds moving in the Lightning Network.\n */\nclass Beadnet {\n\n\t/**\n\t * Create a new BeadNet chart.\n\t *\n\t * @param {Object} options\n\t */\n\tconstructor(options) {\n\t\tthis._opt = extendDefaultOptions(options);\n\t\tlog.debug('initializing beadnet with options: ', this._opt);\n\n\t\t/* find the parent container DOM element and insert an SVG */\n\t\tthis.container = document.querySelector(this._opt.container.selector);\n\t\tthis.svg = d3.select(this.container)\n\t\t\t.append('svg')\n\t\t\t.attr('class', 'beadnet');\n\n\t\tthis.updateSVGSize();\n\n\t\t/* create svg root element called with class \"chart\" and initial  */\n\t\tthis.chart = this.svg.append('g')\n\t\t\t.attr('class', 'chart')\n\t\t\t.attr('transform', 'translate(0,0) scale(1)');\n\n\t\t/* create a SVG-container-element for all nodes and all channels */\n\t\tthis.channelContainer = this.chart.append('g').attr('class', 'channels');\n\t\tthis.nodeContainer = this.chart.append('g').attr('class', 'nodes');\n\n\t\tthis._nodes = [];\n\t\tthis._channels = [];\n\t\tthis.beadElements = [];\n\n\t\tthis.simulation = this._createSimulation();\n\n\t\tthis.updateSimulationCenter();\n\n\t\tthis.behaviors = this.createBehaviors();\n\t\tthis.svg.call(this.behaviors.zoom);\n\n\t\tthis._updateNodes();\n\n\t\tif (this._opt.presentation) {\n\t\t\tthis._initializePresentation();\n\t\t}\n\n\t\twindow.addEventListener('resize', this.onResize.bind(this));\n\t}\n\n\t/**\n\t * Return the node with the given id.\n\t *\n\t * @param {String} id - the id of the node to find.\n\t * @returns {Node|undefined}\n\t */\n\t_getNodeById(id) {\n\t\treturn this._nodes.find((node) => node.id == id);\n\t}\n\n\t/**\n\t * Return the channel with the given id.\n\t *\n\t * @param {String} id - the id of the node to find.\n\t * @returns {Channel|undefined}\n\t */\n\t_getChannelById(id) {\n\t\treturn this._channels.find((ch) => ch.id == id);\n\t}\n\n\t/**\n\t * Creates a new simulation.\n\t *\n\t * @returns {d3.forceSimulation} simulation\n\t * @private\n\t */\n\t_createSimulation() {\n\t\t// return d3.forceSimulation()\n\t\t// \t.nodes(this._nodes)\n\t\t// \t.alphaDecay(0.1)\n\t\t// \t//.force(\"x\", d3.forceX().strength(0))\n\t\t// \t//.force(\"y\", d3.forceY().strength(1))\n\t\t// \t.force(\"charge\", d3.forceManyBody().strength(-1000).distanceMin(this.forceDistance).distanceMax(3*this.forceDistance))\n\t\t// \t//.force(\"collide\", d3.forceCollide(this.forceDistance/6))\n\t\t// \t.force(\"link\", d3.forceLink(this._channels).distance(this.forceDistance))\n\t\t// \t.force(\"center\", d3.forceCenter(this.width / 2, this.height / 2))\n\t\t// \t.alphaTarget(0)\n\t\t// \t.on(\"tick\", this._ticked.bind(this));\n\n\t\treturn d3.forceSimulation(this._nodes)\n\t\t\t.force('charge', d3.forceManyBody().strength(-7000))\n\t\t\t.force('link', d3.forceLink(this._channels).strength(1).distance(this.forceDistance))\n\t\t\t.force('x', d3.forceX())\n\t\t\t.force('y', d3.forceY())\n\t\t\t.alphaTarget(0)\n\t\t\t.on('tick', this._ticked.bind(this));\n\t}\n\n\t/**\n\t * Updates the size of the SVG element to use the full size of it's container.\n\t */\n\tupdateSVGSize() {\n\t\tthis.width = +this.container.clientWidth;\n\t\tthis.height = +this.container.clientHeight;\n\t\tthis.forceDistance = (this.width + this.height) * .2;\n\t\tthis.svg\n\t\t\t.attr('width', this.width)\n\t\t\t.attr('height', this.height);\n\t}\n\n\t/**\n\t * Handles a resize event of the window/container.\n\t */\n\tonResize() {\n\t\tthis.updateSVGSize();\n\t\tthis.updateSimulationCenter();\n\t\tthis.createBehaviors();\n\t}\n\n\t/**\n\t * Creates the d3js behaviours for zoom and drag&drop.\n\t */\n\tcreateBehaviors() {\n\t\treturn {\n\n\t\t\tzoom: d3.zoom()\n\t\t\t\t.scaleExtent([0.1, 5, 4])\n\t\t\t\t.on('zoom', () => this.chart.attr('transform', d3.event.transform)),\n\n\t\t\tdrag: d3.drag()\n\t\t\t\t.on('start', this._onDragStart.bind(this))\n\t\t\t\t.on('drag', this._onDragged.bind(this))\n\t\t\t\t.on('end', this._onDragendEnd.bind(this))\n\t\t}\n\t}\n\n\t/**\n\t * Forces the simulation to restart at the center of the SVG area.\n\t */\n\tupdateSimulationCenter() {\n\t\tconst centerX = this.svg.attr('width') / 2;\n\t\tconst centerY = this.svg.attr('height') / 2;\n\t\tthis.simulation\n\t\t\t.force('center', d3.forceCenter(centerX, centerY))\n\t\t\t.restart();\n\t}\n\n\t/**\n\t * Update DOM elements after this._nodes has been updated.\n\t * This creates the SVG repensentation of a node.\n\t *\n\t * @private\n\t */\n\t_updateNodes() {\n\t\tconst opt = this._opt;\n\n\t\tconsole.log('_updateNodes: ', this._nodes);\n\n\t\tthis._nodeElements = this.nodeContainer\n\t\t\t.selectAll('.node')\n\t\t\t.data(this._nodes, (data) => data.id);\n\n\t\t/* remove deleted nodes */\n\t\tthis._nodeElements.exit().transition().duration(1000).style('opacity', 0).remove();\n\n\t\t/* create new nodes */\n\t\tlet nodeParent = this._nodeElements.enter().append('g')\n\t\t\t.attr('class', 'node')\n\t\t\t.attr('id', (data) => data.id)\n\t\t\t.attr('balance', (data) => data.balance)\n\t\t\t.style('stroke', opt.nodes.strokeColor)\n\t\t\t.style('stroke-width', opt.nodes.strokeWidth);\n\n\t\tnodeParent.append('circle')\n\t\t\t.attr('class', 'node-circle')\n\t\t\t.attr('fill', (data) => data.color)\n\t\t\t.attr('r', opt.nodes.radius)\n\t\t\t.style('stroke-width', 0)\n\t\t\t.style('cursor', 'pointer');\n\n\t\tnodeParent.append('circle')\n\t\t\t.attr('class', 'node-circle-onchain')\n\t\t\t.attr('fill', '#666')\n\t\t\t.attr('r', opt.nodes.radius * 0.4)\n\t\t\t.attr('cx', '-15px')\n\t\t\t.attr('cy', '-30px')\n\t\t\t.style('stroke-width', 0)\n\t\t\t.style('cursor', 'pointer');\n\n\t\tnodeParent.append('text')\n\t\t\t.style('stroke-width', 0.5)\n\t\t\t.attr('class', 'node-text-balance')\n\t\t\t.attr('stroke', opt.container.backgroundColor)\n\t\t\t.attr('fill', opt.container.backgroundColor)\n\t\t\t.attr('font-family', 'bitcoinregular')\n\t\t\t.attr('font-size', '12px')\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.attr('pointer-events', 'none')\n\t\t\t.attr('x', '-15px')\n\t\t\t.attr('y', '-26px')\n\t\t\t.text((d) => '\\u0e3f ' + d.balance);\n\n\t\tnodeParent.append('text')\n\t\t\t.style('stroke-width', 0.5)\n\t\t\t.attr('class', 'node-text-id')\n\t\t\t.attr('stroke', opt.container.backgroundColor)\n\t\t\t.attr('fill', opt.container.backgroundColor)\n\t\t\t.attr('font-family', 'sans-serif')\n\t\t\t.attr('font-size', '15px')\n\t\t\t.attr('y', '0px')\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.attr('pointer-events', 'none')\n\t\t\t.text((d) => d.id);\n\n\t\tnodeParent.append('text')\n\t\t\t.style('stroke-width', 0.5)\n\t\t\t.attr('class', 'node-text-offchain-balance')\n\t\t\t.attr('stroke', opt.container.backgroundColor)\n\t\t\t.attr('fill', opt.container.backgroundColor)\n\t\t\t.attr('font-family', 'sans-serif')\n\t\t\t.attr('font-size', '12px')\n\t\t\t.attr('y', '20px')\n\t\t\t.attr('text-anchor', 'middle')\n\t\t\t.attr('pointer-events', 'none')\n\t\t\t.text((d) => '\\u26A1 ' + d.offchainBalance);\n\n\t\tnodeParent.call(this.behaviors.drag);\n\n\t\t/* update existing nodes */\n\t\tthis._nodeElements\n\t\t\t.attr('offchain-balance', (d) => d.offchainBalance)\n\t\t\t.selectAll('.node-text-offchain-balance')\n\t\t\t.text((d) => '\\u26A1 ' + d.offchainBalance);\n\t\tthis._nodeElements\n\t\t\t.attr('balance', (d) => d.balance)\n\t\t\t.selectAll('.node-text-balance')\n\t\t\t.text((d) => '\\u0e3f ' + d.balance);\n\n\t\tthis.simulation\n\t\t\t.nodes(this._nodes)\n\t\t\t.alphaTarget(1)\n\t\t\t.restart();\n\n\t\tthis._nodeElements = this.nodeContainer\n\t\t\t.selectAll('.node');\n\n\t\treturn this._nodeElements;\n\t}\n\n\t/**\n\t * Adds a new node to the network.\n\t *\n\t * @param {Node} node\n\t * @returns {Beadnet}\n\t */\n\taddNode(node) {\n\t\tnode = node || {};\n\n\t\t/* initialize with default values */\n\t\tnode.id = node.id || getName();\n\t\tnode.balance = node.balance || getRandomNumber(100);\n\t\tnode.offchainBalance = node.offchainBalance || 0;\n\t\tnode.color = this._opt.colorScheme(this._nodes.length % 20 + 1);\n\t\t//node.color = d3.scaleOrdinal(d3.schemeCategory20)(this._nodes.length % 20 + 1)\n\n\t\t/* save to nodes array */\n\t\tthis._nodes.push(node);\n\t\tthis._updateNodes();\n\n\t\t/* make this function chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds multible new nodes to the network.\n\t *\n\t * @param {Array<Node>} nodes\n\t * @returns {Beadnet}\n\t */\n\taddNodes(nodes) {\n\t\tnodes.forEach((node) => this.addNode(node));\n\n\t\t/* make this function chainable */\n\t\treturn this;\n\t}\n\n\tupdateNode(nodeId, props) {\n\t\tconst node = this._getNodeById(nodeId);\n\t\tif (node) {\n\t\t\tObjects.assign(node, props);\n\t\t\tthis._updateNodes();\n\t\t}\n\n\t\t/* make this function chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes a the node with the given id from the network.\n\t *\n\t * @param {String} nodeId\n\t * @returns {Beadnet}\n\t */\n\tremoveNode(nodeId) {\n\t\tthis._nodes = this._nodes.filter((node) => node.id !== nodeId);\n\t\tthis._channels = this._channels.filter((channel) => channel.source.id !== nodeId && channel.target.id !== nodeId);\n\n\t\tthis._updateNodes();\n\t\tthis._updateChannels();\n\n\t\t/* make this function chainable */\n\t\treturn this;\n\t};\n\n\t/**\n\t * Create new nodes with random names.\n\t *\n\t * @param {Number} [count=1] - how many nodes.\n\t * @returns {Node}\n\t */\n\tcreateRandomNodes(count) {\n\t\tif ((typeof count !== 'undefined' && typeof count !== 'number') || count < 0) {\n\t\t\tthrow new TypeError('parameter count must be a positive number');\n\t\t}\n\t\treturn Array.from(new Array(count), (x) => {\n\t\t\treturn {\n\t\t\t\tid: getName(),\n\t\t\t\tbalance: getRandomNumber(100),\n\t\t\t\toffchainBalance: 0\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Picks and returns a random node from the list of existing nodes.\n\t *\n\t * @returns {Node}\n\t */\n\tgetRandomNode() {\n\t\treturn this._nodes[getRandomNumber(this._nodes.length)];\n\t}\n\n\t/**\n\t * Re-draw all channels.\n\t *\n\t * @private\n\t * @returns {d3.selection} this._channelElements\n\t */\n\t_updateChannels() {\n\t\tconst opt = this._opt;\n\n\t\t/* update beads of each channel */\n\t\tthis._channels = this._channels.map((ch) => {\n\t\t\tconst balance = ch.sourceBalance + ch.targetBalance;\n\t\t\tlet index = -1;\n\t\t\tch.beads = [];\n\t\t\tch.beads.push(...Array.from(new Array(ch.sourceBalance), (x) => {\n\t\t\t\tindex++;\n\t\t\t\treturn {\n\t\t\t\t\tstate: 0,\n\t\t\t\t\tindex: index,\n\t\t\t\t\t//id: `bead_${ch.id}_source_${index}x${ch.sourceBalance}`\n\t\t\t\t\tid: `bead_${ch.id}_source_${index}x${balance}`\n\t\t\t\t}\n\t\t\t}));\n\t\t\tch.beads.push(...Array.from(new Array(ch.targetBalance), (x) => {\n\t\t\t\tindex++;\n\t\t\t\treturn {\n\t\t\t\t\tstate: 1,\n\t\t\t\t\tindex: index,\n\t\t\t\t\t//id: `bead_${ch.id}_target_${index}x${ch.targetBalance}`\n\t\t\t\t\tid: `bead_${ch.id}_target_${index}x${balance}`\n\t\t\t\t}\n\t\t\t}));\n\t\t\treturn ch;\n\t\t});\n\n\t\tconsole.log('_updateChannels: ', this._channels);\n\n\t\tthis._channelElements = this.channelContainer.selectAll('.channel').data(this._channels, (d) => d.id);\n\n\t\t/* remove channels that no longer exist */\n\t\tthis._channelElements.exit()\n\t\t\t.transition()\n\t\t\t.duration(500)\n\t\t\t.style('opacity', 0)\n\t\t\t.remove();\n\n\t\t/* create new svg elements for new channels */\n\t\tlet channelRoots = this._channelElements.enter().append('g')\n\t\t\t.attr('class', 'channel');\n\n\t\tthis._channelElements.merge(channelRoots)\n\t\t\t.attr('id', (d) => d.id)\n\t\t\t.attr('source-balance', (d) => d.sourceBalance)\n\t\t\t.attr('target-balance', (d) => d.targetBalance)\n\t\t\t.attr('source-id', (d) => d.source.id)\n\t\t\t.attr('target-id', (d) => d.target.id)\n\t\t\t.attr('highlighted', (d) => d.hightlighted);\n\n\t\tchannelRoots\n\t\t\t.append('path')\n\t\t\t.attr('class', 'path')\n\t\t\t.attr('id', (d) => `${d.id}_path`)\n\t\t\t.style('stroke-width', (d) => opt.channels.strokeWidth === 'auto' ? (d.sourceBalance + d.targetBalance) * 2 : opt.channels.strokeWidth)\n\t\t\t.style('stroke', opt.channels.color)\n\t\t\t.style('fill', 'none');\n\n\t\tif (this._opt.channels.showBalance) {\n\t\t\tchannelRoots\n\t\t\t\t.append('text')\n\t\t\t\t.attr('class', 'channel-text')\n\t\t\t\t.attr('font-family', 'Verdana')\n\t\t\t\t.attr('font-size', '12')\n\t\t\t\t.attr('dx', 150) //TODO: place this dynamic between the beads on the path\n\t\t\t\t.attr('dy', -7)\n\t\t\t\t.style('pointer-events', 'none')\n\t\t\t\t.append('textPath')\n\t\t\t\t.attr('xlink:href', (d) => `#${d.id}_path`)\n\t\t\t\t.attr('class', 'channel-text-path')\n\t\t\t\t.style('stroke-width', 1)\n\t\t\t\t.style('stroke', opt.channels.color)\n\t\t\t\t.style('fill', 'none')\n\t\t\t\t.text((d) => `${d.sourceBalance}:${d.targetBalance}`)\n\t\t}\n\n\t\tlet beadsContainer = channelRoots.append('g')\n\t\t\t.attr('class', 'beads')\n\t\t\t.attr('id', (d) => 'beads_container');\n\n\t\tthis.beadElements = beadsContainer.selectAll('.bead')\n\t\t\t.data((d) => d.beads, (d) => d.id);\n\n\t\tthis.beadElements.exit()\n\t\t\t.transition()\n\t\t\t.duration(800)\n\t\t\t.style('opacity', 0)\n\t\t\t.remove();\n\n\t\tlet beadElement = this.beadElements.enter().append('g')\n\t\t\t.attr('class', 'bead');\n\n\t\tthis.beadElements.merge(beadElement)\n\t\t\t.attr('channel-state', (d) => d.state) //TODO: 0 or 1?\n\t\t\t.attr('id', (d) => d.id)\n\t\t\t.attr('index', (d) => d.index);\n\n\t\tbeadElement.append('circle')\n\t\t\t.attr('r', opt.beads.radius)\n\t\t\t.style('stroke-width', opt.beads.strokeWidth)\n\t\t\t.style('fill', opt.beads.color)\n\t\t\t.style('stroke', opt.beads.strokeColor);\n\n\t\tif (opt.beads.showIndex) {\n\t\t\t/* show bead index */\n\t\t\tbeadElement.append('text')\n\t\t\t\t.attr('class', 'bead-text')\n\t\t\t\t.attr('stroke', opt.container.backgroundColor)\n\t\t\t\t.attr('fill', opt.container.backgroundColor)\n\t\t\t\t.attr('font-family', 'sans-serif')\n\t\t\t\t.attr('font-size', '8px')\n\t\t\t\t.attr('y', '2px')\n\t\t\t\t.attr('text-anchor', 'middle')\n\t\t\t\t.attr('pointer-events', 'none')\n\t\t\t\t.style('stroke-width', 0.2)\n\t\t\t\t.text((d) => d.index);\n\t\t}\n\n\t\t/* update channel */\n\t\t// this._channelElements\n\t\t// \t.attr(\"source-balance\", (d) => d.sourceBalance)\n\t\t// \t.attr(\"target-balance\", (d) => d.targetBalance)\n\t\t// \t.attr(\"source-id\", (d) => d.source.id)\n\t\t// \t.attr(\"target-id\", (d) => d.target.id)\n\t\t// \t.attr(\"highlighted\", (d) => d.hightlighted);\n\n\t\t// this._channelElements.selectAll(\".path\")\n\t\t// \t.attr(\"id\", (d) =>  `${d.id}_path`)\n\t\t// \t.style(\"stroke-width\", opt.channels.strokeWidth)\n\t\t// \t.style(\"stroke\", opt.channels.color)\n\t\t// \t.style(\"fill\", \"none\");\n\n\t\tif (this._opt.channels.showBalance) {\n\t\t\tthis._channelElements.selectAll('.channel-text-path')\n\t\t\t\t.text((d) => `${d.sourceBalance}:${d.targetBalance}`);\n\t\t}\n\n\t\t/***************************************************/\n\t\t/* update channel styles */\n\t\tthis._channelElements.selectAll('[highlighted=true] .path')\n\t\t\t.style('stroke', opt.channels.colorHighlighted);\n\n\t\tthis._channelElements.selectAll('[highlighted=false] .path')\n\t\t\t.style('stroke', opt.channels.color);\n\t\t/************************************************* */\n\n\t\t/* update this._paths; needed in this._ticked */\n\t\tthis._paths = this.channelContainer.selectAll('.channel .path');\n\t\tthis.beadElements = this.channelContainer.selectAll('.channel .beads .bead');\n\n\t\tthis.simulation\n\t\t\t.force('link')\n\t\t\t.links(this._channels);\n\n\t\tthis.simulation\n\t\t\t.alphaTarget(0)\n\t\t\t.restart();\n\n\t\treturn this._channelElements;\n\t}\n\n\t/**\n\t * Creates an unique channel ID using the source and target node IDs and the balances.\n\t *\n\t * @param {*} channelInfos\n\t */\n\t_getUniqueChannelId(channelInfos) {\n\t\tconst channelBalance = (+channelInfos.sourceBalance || 0) + (+channelInfos.targetBalance || 0);\n\t\tlet nonce = 0;\n\t\tlet id = `channel${channelInfos.source}${channelBalance}${channelInfos.target}${nonce > 0 ? nonce : ''}`;\n\t\twhile (this._channels.filter((channel) => channel.id === id).length > 0) {\n\t\t\tnonce++;\n\t\t\tid = `channel${channelInfos.source}${channelBalance}${channelInfos.target}${nonce > 0 ? nonce : ''}`;\n\t\t}\n\t\treturn id;\n\t}\n\n\t/**\n\t * Adds a new channel.\n\t *\n\t * @param {Channel} channel\n\t */\n\taddChannel(channel) {\n\t\tchannel.sourceBalance = channel.sourceBalance || 0;\n\t\tchannel.targetBalance = channel.targetBalance || 0;\n\n\t\tif (!channel.sourceBalance && !channel.targetBalance) {\n\t\t\tthrow new Error('Its not possible to create a channel without any funds. Please add a sourceBalance and/or targetBalance.');\n\t\t}\n\n\t\tlet source = this._getNodeById(channel.source);\n\t\tlet target = this._getNodeById(channel.target);\n\n\t\tif (source.balance < channel.sourceBalance) {\n\t\t\tthrow new Error('Insufficient Funds. The source node has not enough funds to open this channel');\n\t\t}\n\t\tif (target.balance < channel.targetBalance) {\n\t\t\tthrow new Error('Insufficient Funds. The target node has not enough funds to open this channel');\n\t\t}\n\n\t\t/* update balance of the source and target nodes */\n\t\tsource.balance -= channel.sourceBalance;\n\t\tsource.offchainBalance += channel.sourceBalance;\n\t\ttarget.balance -= channel.targetBalance;\n\t\ttarget.offchainBalance += channel.targetBalance;\n\t\tthis._updateNodes();\n\n\t\t/* update the internal channel list */\n\t\tconst id = this._getUniqueChannelId(channel);\n\t\tthis._channels.push({\n\t\t\tid: id,\n\t\t\thightlighted: false,\n\t\t\tsource: source,\n\t\t\ttarget: target,\n\t\t\tsourceBalance: channel.sourceBalance,\n\t\t\ttargetBalance: channel.targetBalance\n\t\t});\n\t\tthis._updateChannels();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an array of channels.\n\t *\n\t * @param {*} channels\n\t */\n\taddChannels(channels) {\n\t\tchannels.forEach((channel) => this.addChannel(channel));\n\t}\n\n\t/**\n\t * Create new nodes with random names.\n\t *\n\t * @param {Number} [count=1] - how many nodes.\n\t * @param {Boolean} [unique=true] - should channels be unique?\n\t * @returns {Node}\n\t */\n\tcreateRandomChannels(count, unique = true) {\n\t\t// if ((typeof count !== \"undefined\" && typeof count !== \"number\") || count < 0) {\n\t\t// \tthrow new TypeError(\"parameter count must be a positive number\");\n\t\t// }\n\t\treturn Array.from(new Array(count), (x) => {\n\t\t\tlet source = this.getRandomNode();\n\t\t\tlet target = this.getRandomNode();\n\n\t\t\tif (unique) {\n\t\t\t\tlet killCounter = 0;\n\t\t\t\twhile ((\n\t\t\t\t\tsource.id === target.id ||\n\t\t\t\t\t(this.getChannels(source.id, target.id).length > 0) &&\n\t\t\t\t\tkillCounter < this._channels.length)) {\n\t\t\t\t\tsource = this.getRandomNode();\n\t\t\t\t\ttarget = this.getRandomNode();\n\t\t\t\t\tkillCounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet sourceBalance = getRandomNumber(4);\n\t\t\tlet targetBalance = getRandomNumber(4);\n\t\t\tsourceBalance = (!sourceBalance && !targetBalance) ? getRandomNumber(4) + 1 : sourceBalance;\n\n\t\t\tlet channel = {\n\t\t\t\tsource: source.id,\n\t\t\t\ttarget: target.id,\n\t\t\t\tsourceBalance: sourceBalance,\n\t\t\t\ttargetBalance: targetBalance\n\t\t\t};\n\t\t\tchannel.id = this._getUniqueChannelId(channel);\n\t\t\treturn channel;\n\t\t});\n\t}\n\n\t/**\n\t * Picks and returns a random channel from the list of existing channels.\n\t */\n\tgetRandomChannel() {\n\t\treturn this._channels[getRandomNumber(this._channels.length)];\n\t}\n\n\t/**\n\t * Returns the number of channels.\n\t * @returns {Number} number of channels\n\t */\n\tgetChannelCount() {\n\t\treturn this._channels.length;\n\t}\n\n\t/**\n\t * Remove channel with the given source and target ids.\n\t *\n\t * @returns {Beadnet} beadnet\n\t */\n\tremoveChannel(sourceId, targetId) {\n\t\tthis._channels = this._channels.filter((channel) => {\n\t\t\tif ((channel.source.id !== sourceId) || (channel.target.id !== targetId)) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet sourceNode = this._getNodeById(sourceId);\n\t\t\t\tsourceNode.balance += channel.sourceBalance;\n\t\t\t\tsourceNode.offchainBalance -= channel.sourceBalance;\n\t\t\t\tlet targetNode = this._getNodeById(targetId);\n\t\t\t\ttargetNode.balance += channel.targetBalance;\n\t\t\t\ttargetNode.offchainBalance -= channel.targetBalance;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tconsole.log('removeChannel: ', this._channels);\n\t\tthis._updateNodes();\n\t\tthis._updateChannels();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns all channels that exist between two nodes.\n\t *\n\t * @param {String} sourceId\n\t * @param {String} targetId\n\t * @returns {Channel[]} channels\n\t */\n\tgetChannels(sourceId, targetId) {\n\t\treturn this._channels.filter((channel) =>\n\t\t\t(channel.source.id === sourceId && channel.target.id === targetId) ||\n\t\t\t(channel.target.id === sourceId && channel.source.id === targetId)\n\t\t);\n\t}\n\n\t/**\n\t * Transfer a amount from the source node balance to or from the channel.\n\t *\n\t * @param {String} sourceId - source node id\n\t * @param {String} targetId - target node id\n\t * @param {Number} amount - positive if moved from not to channel; negative if moved from channel to node.\n\t * @returns {Beadnet} beadnet\n\t */\n\tchangeChannelSourceBalance(sourceId, targetId, amount) {\n\t\tconst channels = this.getChannels(sourceId, targetId);\n\t\tif (!channels || channels.length <= 0) {\n\t\t\t//TODO: throw an error\n\t\t\tconsole.error(`no channel found between \"${sourceId}\" and \"${targetId}\"`);\n\t\t\treturn this;\n\t\t}\n\t\t//TODO: handle error if more than one channel is found.\n\t\tlet channel = channels[0];\n\t\tlet node = this._getNodeById(channel.source.id);\n\t\t//TODO: throw error if node not found;\n\n\t\tif (amount > 0) {\n\t\t\tamount = Math.abs(amount);\n\t\t\tif (node.balance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`node ${sourceId} has not enough balance (${node.balance}) to refund the channel by ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance -= amount;\n\t\t\tnode.offchainBalance += amount;\n\t\t\tchannel.sourceBalance += amount;\n\t\t} else {\n\t\t\tamount = Math.abs(amount);\n\t\t\tif (channel.sourceBalance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`sourceBalance (${sourceId}) is not enough (${channel.sourceBalance}) to remove an amount of ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance += amount;\n\t\t\tnode.offchainBalance -= amount;\n\t\t\tchannel.sourceBalance -= amount;\n\t\t}\n\n\t\tthis._updateNodes();\n\t\tthis._updateChannels();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Transfer a amount from the target node banlance to or from the channel.\n\t *\n\t * @param {String} sourceId - source node id\n\t * @param {String} targetId - target node id\n\t * @param {Number} amount - positive if moved from node to channel; negative if moved from channel to node.\n\t * @returns {Beadnet} beadnet\n\t */\n\tchangeChannelTargetBalance(sourceId, targetId, amount) {\n\t\tconst channels = this.getChannels(sourceId, targetId);\n\t\tif (!channels || channels.length <= 0) {\n\t\t\t//TODO: throw an error\n\t\t\tconsole.error(`no channel found between \"${sourceId}\" and \"${targetId}\"`);\n\t\t\treturn this;\n\t\t}\n\t\t//TODO: handle error if more than one channel is found.\n\t\tlet channel = channels[0];\n\t\tlet node = this._getNodeById(channel.target.id);\n\t\t//TODO: throw error if node not found;\n\n\t\tif (amount > 0) {\n\t\t\tamount = Math.abs(amount);\n\t\t\tif (node.balance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`node ${targetId} has not enough balance (${node.balance}) to refund the channel by ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance -= amount;\n\t\t\tnode.offchainBalance += amount;\n\t\t\tchannel.targetBalance += amount;\n\t\t} else {\n\t\t\tamount = Math.abs(amount);\n\t\t\tif (channel.targetBalance < amount) {\n\t\t\t\t//TODO: throw an error\n\t\t\t\tconsole.error(`targetBalance (${targetId}) is not enough (${channel.targetBalance}) to remove an amount of ${amount}`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tnode.balance += amount;\n\t\t\tnode.offchainBalance -= amount;\n\t\t\tchannel.targetBalance -= amount;\n\t\t}\n\n\t\tthis._updateNodes();\n\t\tthis._updateChannels();\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Mark a channel as \"highlighted\".\n\t *\n\t * @param {String} sourceId\n\t * @param {String} targetId\n\t * @param {Boolean} state - should the channel be highlighted [true]/false\n\t * @returns {Beadnet}\n\t */\n\thighlightChannel(sourceId, targetId, state) {\n\t\tlet channels = this.getChannels(sourceId, targetId);\n\t\tchannels.forEach((channel) => channel.hightlighted = state ? state : !channel.hightlighted);\n\n\t\tthis._updateChannels();\n\n\t\t/* make this function chainable */\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calculate and then translate a bead to a certain position.\n\t *\n\t * @param {*} b\n\t * @returns {string} bead position.\n\t */\n\t_positionBeat(b, d) {\n\t\tconst bead = d3.select(b);\n\t\tconst index = d.index;\n\t\tconst state = +bead.attr('channel-state'); // state 0=source, 1=target\n\t\tconst channel = d3.select(bead.node().parentNode.parentNode);\n\t\tconst path = channel.select('.path').node();\n\n\t\tconst channelData = channel.data()[0];\n\t\tconst sourceBalance = channelData.sourceBalance;\n\t\tconst targetBalance = channelData.targetBalance;\n\t\tconst balance = sourceBalance + targetBalance;\n\t\tconst distanceBetweenBeads = this._opt.beads.distance + this._opt.beads.spacing;\n\t\tconst channelPadding = this._opt.beads.firstPosition + this._opt.beads.spacing;\n\n\t\tlet startPosition = channelPadding + (index * distanceBetweenBeads);\n\t\tlet endPosition = channelPadding + ((balance - 1 - index) * distanceBetweenBeads);\n\t\tlet totalDistance = path.getTotalLength() - startPosition - endPosition;\n\n\t\tconst beadPosition = path.getPointAtLength(startPosition + state * totalDistance);\n\t\treturn `translate(${beadPosition.x},${beadPosition.y})`;\n\t}\n\n\t/**\n\t * Handle an animation tick.\n\t *\n\t * @private\n\t */\n\t_ticked() {\n\t\tif (this._nodeElements) {\n\t\t\tthis._nodeElements.attr('transform', (data) => `translate(${data.x},${data.y})`);\n\t\t}\n\t\tif (this._paths) {\n\t\t\tthis._paths.attr('d', (d) => {\n\t\t\t\t// var count = this._channels.filter((c) => ((d.source.id === d.source.id) && (d.target.id === d.target.id))).length;\n\t\t\t\t// if (count <= 1) {\n\t\t\t\treturn `M${d.source.x},${d.source.y} ${d.target.x},${d.target.y}`;\n\t\t\t\t// } else {\n\t\t\t\t// \tvar dx = d.target.x - d.source.x;\n\t\t\t\t// \tvar dy = d.target.y - d.source.y;\n\t\t\t\t// \tvar dr = Math.sqrt((dx*dx+count) + (dy*dy+count));\n\t\t\t\t// \treturn `M${d.source.x},${d.source.y}A${dr},${dr} 0 0,1 ${d.target.x},${d.target.y}`;\n\t\t\t\t// }\n\t\t\t});\n\t\t}\n\t\tthis.tickedBeads();\n\t}\n\n\t/**\n\t * Handle bead animation.\n\t */\n\ttickedBeads() {\n\t\tlet that = this;\n\t\tif (!this.beadElements || this.beadElements.length === 0 || this.beadElements.empty()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.beadElements.attr('transform', function (d) {\n\t\t\treturn that._positionBeat(this, d);\n\t\t});\n\t}\n\n\t/**\n\t * Animates a bead movement.\n\t *\n\t * @param {*} bead\n\t * @param {*} direction\n\t * @param {*} delay\n\t */\n\tanimateBead(bead, direction, delay) {\n\t\tlet that = this;\n\t\tdirection = !!direction;\n\t\tconst select = d3.select(bead);\n\t\treturn select.transition()\n\t\t\t.delay(delay)\n\t\t\t//.ease(d3.easeLinear)\n\t\t\t.ease(d3.easeQuadInOut)\n\t\t\t.duration(1000)\n\t\t\t.attrTween('channel-state', function (a) {\n\t\t\t\treturn function (t) {\n\t\t\t\t\tthat.tickedBeads();\n\t\t\t\t\tif (direction) {\n\t\t\t\t\t\treturn 1 - t;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Moves a certain amount of beads from source to target node. If a callback is provided, it is called after the animation\n\t * has stopped.\n\t *\n\t * @param {*} sourceId\n\t * @param {*} targetId\n\t * @param {*} beadCount\n\t * @param {*} callback\n\t * @returns {Beadnet} beadnet\n\t */\n\tmoveBeads(sourceId, targetId, beadCount, callback) {\n\t\tconst channels = this.getChannels(sourceId, targetId);\n\n\t\tlet channel = channels[0];\n\t\tif (!channel) {\n\t\t\t//TODO: throw error!?\n\t\t\tconsole.error('no channel found!');\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: get channel with source and target\n\t\tconst channelElement = d3.select(`#${channel.id}`);\n\n\t\tif (channel.source.id === sourceId) {\n\n\t\t\tlet sourceBalance = channel.sourceBalance;\n\t\t\tlet targetBalance = channel.targetBalance;\n\t\t\tlet startIndex = sourceBalance - beadCount;\n\t\t\tlet endIndex = startIndex + beadCount - 1;\n\n\t\t\tlet that = this;\n\t\t\tlet transitionCounter = 0;\n\t\t\tchannelElement.selectAll('.bead').each(function (d, index) {\n\t\t\t\tif (index >= startIndex && index <= endIndex) {\n\t\t\t\t\tconst delay = (endIndex - index) * 100;\n\t\t\t\t\ttransitionCounter++;\n\t\t\t\t\tthat.animateBead(this, d.state, delay).on('end', (ch, a, b) => {\n\t\t\t\t\t\tsourceBalance--;\n\t\t\t\t\t\ttargetBalance++;\n\t\t\t\t\t\td.state = 1;\n\n\t\t\t\t\t\tchannel.sourceBalance = sourceBalance;\n\t\t\t\t\t\tchannel.source.offchainBalance--;\n\t\t\t\t\t\tchannel.targetBalance = targetBalance;\n\t\t\t\t\t\tchannel.target.offchainBalance++;\n\t\t\t\t\t\tthat._updateChannels();\n\t\t\t\t\t\tthat._updateNodes();\n\n\t\t\t\t\t\tchannelElement\n\t\t\t\t\t\t\t.attr('source-balance', sourceBalance)\n\t\t\t\t\t\t\t.attr('target-balance', targetBalance);\n\n\t\t\t\t\t\tif (that._opt.channels.showBalance) {\n\t\t\t\t\t\t\tchannelElement.select('.channel-text-path')\n\t\t\t\t\t\t\t\t.text(`${sourceBalance}:${targetBalance}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttransitionCounter--;\n\t\t\t\t\t\tif (transitionCounter <= 0) {\n\t\t\t\t\t\t\treturn callback && callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tlet sourceBalance = channel.sourceBalance;\n\t\t\tlet targetBalance = channel.targetBalance;\n\t\t\tlet startIndex = (sourceBalance + targetBalance) - targetBalance;\n\t\t\tlet endIndex = startIndex + beadCount - 1;\n\n\t\t\tlet that = this;\n\t\t\tlet transitionCounter = 0;\n\t\t\tchannelElement.selectAll('.bead').each(function (d, index) {\n\t\t\t\tif (index >= startIndex && index <= endIndex) {\n\t\t\t\t\tconst delay = (index) * 100;\n\t\t\t\t\ttransitionCounter++;\n\t\t\t\t\tthat.animateBead(this, d.state, delay).on('end', (ch, a, b) => {\n\t\t\t\t\t\tsourceBalance++;\n\t\t\t\t\t\ttargetBalance--;\n\t\t\t\t\t\td.state = 0;\n\n\t\t\t\t\t\tchannel.sourceBalance = sourceBalance;\n\t\t\t\t\t\tchannel.source.offchainBalance++;\n\t\t\t\t\t\tchannel.targetBalance = targetBalance;\n\t\t\t\t\t\tchannel.target.offchainBalance--;\n\t\t\t\t\t\tthat._updateChannels();\n\t\t\t\t\t\tthat._updateNodes();\n\n\t\t\t\t\t\tchannelElement\n\t\t\t\t\t\t\t.attr('source-balance', sourceBalance)\n\t\t\t\t\t\t\t.attr('target-balance', targetBalance);\n\n\t\t\t\t\t\tif (that._opt.channels.showBalance) {\n\t\t\t\t\t\t\tchannelElement.select('.channel-text-path')\n\t\t\t\t\t\t\t\t.text(`${sourceBalance}:${targetBalance}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttransitionCounter--;\n\t\t\t\t\t\tif (transitionCounter <= 0) {\n\t\t\t\t\t\t\treturn callback && callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Handles the start of mouse drag event.\n\t *\n\t * @private\n\t */\n\t_onDragStart(d) {\n\t\tif (!d3.event.active) {\n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0.1)\n\t\t\t\t.restart();\n\t\t}\n\t\td.fx = d.x;\n\t\td.fy = d.y;\n\t}\n\n\t/**\n\t * Handles the mouse drag event.\n\t *\n\t * @private\n\t */\n\t_onDragged(d) {\n\t\td.fx = d3.event.x;\n\t\td.fy = d3.event.y;\n\t}\n\n\t/**\n\t * Handles the end of mouse drag event.\n\t *\n\t * @private\n\t */\n\t_onDragendEnd(d) {\n\t\tif (!d3.event.active) {\n\t\t\tthis.simulation\n\t\t\t\t.alphaTarget(0);\n\t\t}\n\t\td.fx = null;\n\t\td.fy = null;\n\t}\n\n\t/**\n\t * Initialize presentation mode, check if the provided steps are valid.\n\t *\n\t * @private\n\t */\n\t_initializePresentation() {\n\t\tif (this._opt.presentation && this._opt.presentation.steps && this._opt.presentation.steps.length > 0) {\n\t\t\tthis.presentation = {\n\t\t\t\tcurrentState: 0,\n\t\t\t\tsteps: this._opt.presentation.steps,\n\t\t\t};\n\t\t\tthis.presentation.steps.forEach(step => {\n\t\t\t\tstep.forEach(subStep => {\n\t\t\t\t\tlet fnMapping = COMMAND_MAPPING[subStep.cmd];\n\t\t\t\t\tif (fnMapping) {\n\t\t\t\t\t\tif (!subStep.args || subStep.args.length === 0 || subStep.args.length !== fnMapping.numArgs) {\n\t\t\t\t\t\t\tconsole.error('the command ' + subStep.cmd + ' requires exactly ' + fnMapping.numArgs + ' arguments!')\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('invalid command ' + subStep.cmd + '!');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.error('presentation must be an object that contains one or more steps');\n\t\t}\n\t}\n\n\t/**\n\t * Show the next step of the presentation. Only has an effect if the instance was initialized in presentation mode.\n\t */\n\tnextStep() {\n\t\tif (!this.presentation) {\n\t\t\tconst err = 'not in presentation mode! please pass a presentation object when creating the beadnet.';\n\t\t\tconsole.log(err);\n\t\t\treturn err;\n\t\t}\n\t\tif (this.presentation.currentState >= this.presentation.steps.length) {\n\t\t\tconst err = 'presentation reached its end. please restart it.';\n\t\t\tconsole.log(err);\n\t\t\treturn err;\n\t\t}\n\t\tlet script = this.presentation.steps[this.presentation.currentState];\n\t\tlet description = '';\n\t\tif ((typeof script[0]) === 'string') {\n\t\t\tdescription = script.shift();\n\t\t}\n\t\tlet bn = this;\n\t\tscript.forEach(subStep => {\n\t\t\tlet fnMapping = COMMAND_MAPPING[subStep.cmd];\n\t\t\tlet fn = bn[fnMapping.fnName];\n\t\t\tfn.apply(bn, subStep.args);\n\t\t});\n\t\tthis.presentation.currentState++;\n\t\treturn description;\n\t}\n}\n\nexport default Beadnet;\n"],"names":["getName","names","Math","floor","random","length","root","definition","this","noop","undefinedType","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","replaceLoggingMethods","level","loggerName","i","methodFactory","log","debug","defaultMethodFactory","console","undefined","Logger","name","defaultLevel","factory","currentLevel","self","storageKey","getPersistedLevel","storedLevel","window","localStorage","ignore","cookie","document","location","indexOf","encodeURIComponent","exec","slice","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","toUpperCase","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers","module","exports","hasOwn","Object","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","isPlainObject","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","defaultOptions","d3","scaleOrdinal","schemeCategory20","getRandomNumber","max","COMMAND_MAPPING","opt","_opt","nodes","color","colorScheme","strokeColor","container","backgroundColor","channels","colorHighlighted","beads","animation","easeExp","distance","radius","spacing","strokeWidth","firstPosition","showIndex","querySelector","selector","svg","select","append","attr","updateSVGSize","chart","channelContainer","nodeContainer","_nodes","_channels","beadElements","simulation","_createSimulation","updateSimulationCenter","behaviors","createBehaviors","zoom","_updateNodes","presentation","_initializePresentation","addEventListener","onResize","id","find","node","ch","forceSimulation","force","forceManyBody","strength","forceLink","forceDistance","forceX","forceY","alphaTarget","on","_ticked","width","clientWidth","height","clientHeight","scaleExtent","_this","event","transform","drag","_onDragStart","_onDragged","_onDragendEnd","centerX","centerY","forceCenter","restart","_nodeElements","selectAll","data","exit","transition","duration","style","remove","nodeParent","enter","balance","text","d","offchainBalance","push","forEach","_this2","addNode","nodeId","props","_getNodeById","assign","filter","channel","source","_updateChannels","count","from","x","map","sourceBalance","targetBalance","index","_channelElements","channelRoots","merge","hightlighted","showBalance","beadsContainer","beadElement","state","_paths","links","channelInfos","channelBalance","nonce","Error","_getUniqueChannelId","_this3","addChannel","unique","_this4","getRandomNode","killCounter","getChannels","sourceId","targetId","sourceNode","_this5","targetNode","amount","error","abs","b","bead","parentNode","path","channelData","distanceBetweenBeads","channelPadding","startPosition","endPosition","totalDistance","getTotalLength","beadPosition","getPointAtLength","y","tickedBeads","that","empty","_positionBeat","direction","delay","ease","easeQuadInOut","attrTween","a","t","beadCount","callback","channelElement","startIndex","endIndex","transitionCounter","each","animateBead","active","fx","fy","steps","fnMapping","subStep","cmd","args","numArgs","err","currentState","script","description","shift","bn","fnName"],"mappings":"mLAAA,MAAiB,CAChB,QACA,UACA,SACA,QACA,UACA,OACA,OACA,SACA,MACA,QACA,OACA,QACA,SACA,MACA,OACA,MACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,MACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,SACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,QACA,UACA,QACA,OACA,OACA,QACA,SACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,OACA,MACA,SACA,UACA,UACA,QACA,OACA,SACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,SACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,MACA,SACA,SACA,QACA,SACA,UACA,UACA,QACA,OACA,OACA,SACA,OACA,MACA,UACA,SACA,QACA,SACA,SACA,MACA,SACA,OACA,YACA,UACA,SACA,QACA,MACA,UACA,QACA,SACA,UACA,SACA,SACA,SACA,OACA,OACA,SACA,MACA,MACA,QACA,SACA,MACA,SACA,QACA,SACA,UACA,QACA,QACA,UACA,MACA,SACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,QACA,SACA,QACA,OACA,QACA,MACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,SACA,QACA,OACA,OACA,OACA,MACA,QACA,QACA,SACA,MACA,SACA,UACA,OACA,SACA,QACA,QACA,MACA,OACA,OACA,QCnMD,SAASA,WACDC,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,yICG9C,IAAUC,EAAMC,EAAND,EASTE,EATeD,EAST,WAIJ,IAAIE,EAAO,aACPC,EAAgB,YAEhBC,EAAa,CACb,QACA,QACA,OACA,OACA,SAIJ,SAASC,EAAWC,EAAKC,GACrB,IAAIC,EAASF,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"}